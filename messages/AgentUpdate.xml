<?xml version="1.0"?>
<message xmlns="https://leoschwarz.github.io/opensim-protocol/util/MessageSchema.xsd" name="AgentUpdate" frequency_class="high" frequency_number="4" trusted="false" compression="zerocoded">
    <block name="AgentData" quantity="single">
        <field name="AgentID" type="LLUUID">
            <doc><doc-link target="common/fields.xml" item="agent_id">Agent id</doc-link> of the sender.</doc>
        </field>
        <field name="SessionID" type="LLUUID">
            <doc><doc-link target="common/fields.xml" item="session_id"/></doc>
        </field>
        <field name="BodyRotation" type="LLQuaternion">
            <doc>TODO</doc>
        </field>
        <field name="HeadRotation" type="LLQuaternion">
            <doc>TODO</doc>
        </field>
        <field name="State" type="U8">
            <doc>
                Indicates current behavior state:

                0: walking
                1: mouselook
                2: typing
            </doc>
        </field>
        <field name="CameraCenter" type="LLVector3">
            <doc>Region local center coordinates of the camera.</doc>
        </field>
        <field name="CameraAtAxis" type="LLVector3">
            <doc>Camera coordinate axis in looking _at_ direction (forward).
                TODO: Check how these are provided? Most likely unit distance from camera center into the direction of the coordinate axis?
            </doc>
        </field>
        <field name="CameraLeftAxis" type="LLVector3">
            <doc>Camera coordinate axis, left direction.</doc>
        </field>
        <field name="CameraUpAxis" type="LLVector3">
            <doc>Camera coordinate axis, up direction.</doc>
        </field>
        <field name="Far" type="F32">
            <doc>TODO</doc>
        </field>
        <field name="ControlFlags" type="U32">
            <doc>
                On/off bits for movement keys which the server then feeds into the physics engine
                to compute actual movement of the client. The server then sends updates back to the
                clients (TODO: which packet?).

                TODO:
                 - If we send a flag and then stop what happens with the agent? According to what I saw
                   so far the agent derenders but maybe this is also due to bugs in my code.

                The official viewer rapidly polls for currently pressed keys, sets the flags and sends the packet, then resets the flags until the next polling interval.

                Flags (encoded as 32 bit integer, in the encoding column the bit number from least significant to most significant bit is listed for each flag):

                <![CDATA[
                <table>
                    <tr><th>Encoding</th><th>Flag</th><th>Description</th><th>SL Keybinding</th></tr>
                    <tr><td>0</td><td>EMPTY</td><td>TODO</td><td></td></tr>
                    <tr><td>1</td><td>MOVE_FWD_POS</td><td>Move forward</td><td>W/Up arrow</td></tr>
                    <tr><td>2</td><td>MOVE_FWD_NEG</td><td>Move backward</td><td>s/down arrow</td></tr>
                    <tr><td>3</td><td>MOVE_LEFT_POS</td><td>Move left</td><td>shift-(a/left arrow)</td></tr>
                    <tr><td>4</td><td>MOVE_LEFT_NEG</td><td>Move right</td><td>shift-(d/right arrow)</td></tr>
                    <tr><td>5</td><td>MOVE_UP_POS</td><td>not flying: jump; flying: move up</td><td>e</td></tr>
                    <tr><td>6</td><td>MOVE_UP_NEG</td><td>not flying: croutch; flying: move down</td><td>c</td></tr>
                    <tr><td>7</td><td></td><td>unused</td><td></td></tr>
                    <tr><td>8</td><td></td><td>unused</td><td></td></tr>
                    <tr><td>9</td><td></td><td>unused</td><td></td></tr>
                    <tr><td>10</td><td></td><td>unused</td><td></td></tr>
                    <tr><td>11</td><td>FAST_FWD</td><td>OR-ed with agent_control_fwd_* if the keyboard is being used</td><td>todo</td></tr>
                    <tr><td>12</td><td>FAST_LEFT</td><td>OR-ed with agent_control_left_* if the keyboard is being used</td><td>todo</td></tr>
                    <tr><td>13</td><td>FAST_UP</td><td>OR-ed with agent_control_up_* if the keyboard is being used</td><td>todo</td></tr>
                    <tr><td>14</td><td>FLY</td><td>Fly</td><td></td></tr>
                    <tr><td>15</td><td>STOP</td><td>TODO</td><td></td></tr>
                    <tr><td>16</td><td>FINISH_ANIM</td><td>Finish the current animation</td><td></td></tr>
                    <tr><td>17</td><td>STAND_UP</td><td>Stand up from the ground or a prim seat</td><td></td></tr>
                    <tr><td>18</td><td>SIT_ON_GROUND</td><td>Sit on the ground at the current location</td><td></td></tr>
                    <tr><td>19</td><td>MOUSELOOK</td><td></td><td></td></tr>
                    <tr><td>20</td><td></td><td>legacy</td><td></td></tr>
                    <tr><td>21</td><td></td><td>legacy</td><td></td></tr>
                    <tr><td>22</td><td></td><td>legacy</td><td></td></tr>
                    <tr><td>23</td><td></td><td>legacy</td><td></td></tr>
                    <tr><td>24</td><td></td><td>legacy</td><td></td></tr>
                    <tr><td>25</td><td></td><td>legacy</td><td></td></tr>
                    <tr><td>26</td><td>TURN_LEFT</td><td></td><td></td></tr>
                    <tr><td>27</td><td>TURN_RIGHT</td><td></td><td></td></tr>
                    <tr><td>28</td><td>AWAY</td><td>Set when the avatar is idled or set to away. Note that the away animation is activated separately from setting this flag.</td><td></td></tr>
                    <tr><td>29</td><td>LBUTTON_DOWN</td><td></td><td></td></tr>
                    <tr><td>30</td><td>LBUTTON_UP</td><td></td><td></td></tr>
                    <tr><td>31</td><td>ML_LBUTTON_DOWN</td><td></td><td></td></tr>
                    <tr><td>32</td><td>ML_LBUTTON_UP</td><td></td><td></td></tr>
                </table>
                ]]>
            </doc>
        </field>
        <field name="Flags" type="U8">
            <doc>
                TODO: what are these?
            </doc>
        </field>
    </block>
    <doc>
        Camera and movement info about an agent sent from viewer to simulator.

        Sent up to 10 times per second, but must be sent at least every now and then.

        TODO:
        /// AgentUpdate - Camera info sent from viewer to simulator
/// or, more simply, two axes and compute cross product
/// Center is region local (JNC 8.16.2001)
/// Camera center is region local (JNC 8.29.2001)
    </doc>
    <sources>
        <source>Template File</source>
        <source>http://lib.openmetaverse.co/wiki/Movement (2017-09-24)</source>
        <source>OpenMetaverse/AgentManagerMovement.cs</source>
    </sources>
</message>
